// 쇼핑몰 갤러리 JS - small.js

/************************************************************************
    [ 컴포넌트 데이터 전달 / 이벤트 호출 ]
1.부모 / 자식구분하기
(1)부모 : 뷰 인스턴스 및 html 뷰 대상 요소
-뷰 대상요소 안에 있는 사용자 정의 태그를 말함
-그리고 그걸 생성하는 게 뷰 인스턴스임
(2)자식 : 뷰 컴포넌트 인스턴스

2.부모의 변수를 자식에게 전달하기
(1)props down : 속성으로 전달하고 props로 받기
(2)구현 방법 : 
    1)부모인 사용자정의태그에 v-bind:내가정의한속성=값 이라 설정한 후
    2-1)자식인 컴포넌트 인스턴스 옵션에 props:[내가정의한속성변수명, 속성변수명2, ...]
    2-2)또는 {속성명:데이터형, 속성명:데이터형, ...} 
    -2-1과 2-2의 차이는, 배열로 값을 세팅하면 데이터형과 무관하게 받을 수 있지만 객체로 값을 세팅하면 데이터형을 필터링해서 정확히 일치하는 애들만 걸러서 받을 수 있음 (타입스크립트 적용되게 함)
(3)주의사항 : 부모로부터 받은 데이터변수는 값을 새로 할당하여 변경할 수 없음
-그대로 쓰거나 아니면 받은 애를 가지고 요리(?)해서 쓸 수는 있음

3.자식인 컴포넌트에서 부모의 이벤트 호출하기
(1)$emit 으로 전달하고(1~3번) on이벤트 설정으로 받음(4~5번)
(2)구현 방법 : 
    1)자식컴포넌트 템플릿에서 v-on:이벤트명='자식메서드' 형태로 쓴 후
    2)자식컴포넌트 메서드구역(methods를 말함)에 이벤트에 쓴 '자식메서드를' 만들고
    3)this.$emit('부모가만든이벤트명') 으로 전달함
    4)부모태그에서 v-on:'부모가만든이벤트명'='부모메서드' 형태로 쓴 후
    5)부모의 뷰 인스턴스 메서드구역(methods)에 같은 이름의 '부모메서드'를 만들고 기능을 구현함

************************************************************************/

// 0.뷰 JS 인스턴스 생성용 함수 만들기 : new Vue() 계속 쓰기 귀찮으니까!
const makeVue = (x) => new Vue({ el: x });

// 1.제목에 넣을 전역 컴포넌트 만들기 (만들기만 한 것임)
Vue.component("tit-comp", {
    template: `
                    <strong>
                        <span>👀Vue JS👀 컴포넌트 : </span>
                        쇼핑모~~~올 갤러리 리스트
                    </strong>
                `,
}); //////////////////// 전역 컴포넌트 1 /////////////////////////

// 뷰 인스턴스 생성하기 : 반드시 사용할 컴포넌트 아랫줄에 있어야 함
// (1)그냥 생성하기
// new Vue({
//     el: ".tit"

// });

// new Vue({
//     el: ".tit2"
// });

// (2)생성용 함수로 생성하기
makeVue(".tit");
makeVue(".tit2");

// 숫자 증감 변수 : 컴포넌트 내부 변수 세팅하는 'data: function(){}'에다 넣으면 적용 안됨!
// 🔥이유는 다음에 물어보기~~!!
let num = 0;

// 2.갤러리 리스트에 넣을 전역 컴포넌트 만들기
// 😂😂여기가 자식입니다😂😂
Vue.component("list-comp", {
    // v-on:click="goPapa" 로 부모 이벤트 접근 시작함~
    template: `
                    <div>
                        <img v-bind:src="gsrc" v-on:click="goPapa" v-on:mouseover="ovNow" alt="dress">
                        <aside>
                            <h2>{{gname}}</h2>
                            <h3>{{gprice}}</h3>
                        </aside>
                    </div>
                `,
    // 😂부모에서 v-bind:속성명=값 으로 전달한 속성변수를 props:[] / props:{}로 받음
    props: ["haha", "myseq", "endlet"],
    // props:{"haha":Number}, ->😂데이터형 일치함
    // props:{"haha":String}, ->😂만약 속성의 데이터형이 안 맞으면! 일단 브라우저가 뿌려주지만 콘솔창에 경고 띄워줌! (벨리데이션해줌)
    // 컴포넌트 내부 변수 세팅
    data: function () {
        return {
            // gsrc:`img_gallery/${this.setNum()}.jpg`,
            // 😂😂부모에서 받아온 haha를 가져다 쓸 수 있게 된다 (this써야해~)😂😂
            gsrc: `img_gallery/${this.haha}.jpg`,
            gname: `Sofia23` + this.haha + this.endlet + (this.myseq % 2 ? "🍰" : "💛"),
            gprice: this.insComma((123000 * this.haha) / 2) + `원`,
            // 😂😂위에서처럼 가져온 변수를 가공해서 쓸 수 있음😂😂
        };
    },
    // 컴포넌트 내부 메서드 세팅
    methods: {
        // 클래스의 메서드 형식과 동일한 형식으로 작성 가능함
        //🌈🌈정규식함수(숫자 세자리마다 콤마해주는 기능)🌈🌈
        insComma(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        },
        // 부모 이벤트 호출 전달하기 : $emit()메서드 사용함!
        goPapa() {
            // $emit(부모가 만든 이벤트명)
            this.$emit("hull");
        },
        ovNow() {
            this.$emit("gotkimchi");
        },
    },
}); //////////////// 전역 컴포넌트 2 /////////////////////

// 리스트 뷰 인스턴스 생성하기
// makeVue(".grid");
// 😂😂여기가 부모입니다😂😂
new Vue({
    el: ".grid",
    // 부모 뷰 인스턴스 메서드구역
    methods: {
        // 자식이벤트 전달 후 실행메서드!
        goMsg() {
            alert("자식이 부모에게 이벤트 전달 성공!");
        },
        ovMsg() {
            console.log("이렇게?? 오버??");
        },
    },
}); //////////////////// Vue 인스턴스 ///////////////////////////

/*********************************************************************************************
    [ 뷰JS 출력 ]
mustache : 
{{ expression }}문법을 사용해서 특정 변수를 그대로 렌더링한다.

v-text : 
특정 태그내에서 사용할 수 있으며 v-text속성을 사용해서 "텍스트"로 렌더링한다. 
이 때 렌더링된 텍스트는 해당 태그의 자식 노드로 들어간다.

v-html : 
특정 태그내에서 사용할 수 있으며 v-html속성을 사용해서 "html"로 렌더링한다. 
이 때 렌더링된 텍스트는 해당 태그의 자식 노드로 들어간다.

v-bind : 
특정 태그내에서 사용할 수 있으며 v-bind문법을 사용해서 vue내부의 값
(data, props, computed, methods)들의 값을 해당 속성의 값으로 렌더링한다.
*********************************************************************************************/
