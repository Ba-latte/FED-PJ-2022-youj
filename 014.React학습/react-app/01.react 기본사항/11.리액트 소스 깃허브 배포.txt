[ 리액트 배포용 소스 깃허브에 호스팅하기 ]

1.리액트 SPA 개발환경 소스를 빌드하기
-빌드 명령어 : npm run build
-빌드 후 build 폴더가 생성됨
(다시 빌드시 매번 갱신됨 = 지울 필요 없음)
(참고 : build 폴더/node_modules폴더는 기본적으로 깃허브 소스 관리 폴더에서 제외하여 업로드하지 않음)

2.깃허브 실서버용 레파지토리를 생성하기

3.깃허브 pages에 서버를 공개하기
(단, 소스를 올린 후 index 파일이 있어야 함)

4.깃허브 실서버용 소스 공간에 업로드하기

5.pages에 공개한 주소를 카피하기
(1)깃허브 첫 페이지에 링크 주소 등록(편리함 때문)
(2)개발소스 package.json파일에 약 5번째 라인 쯤에 '"homepage" : "깃허브 주소"' 를 등록하기
ex) "homepage": "https://tombap8.github.io/react-site",
(주의! 배포시에만 넣고 개발시에는 뺀다! -> 있는 json을 백업하기)
-깃허브 주소는 
https://내아이디.github.io/레파지토리명
⭐주의사항 : 본 세팅을 반드시 빌드 전에 넣고 빌드할 것!!



[ 배포 전 라우터 소스 수정하여 빌드하기 ]
-깃허브는 기본적으로 SPA가 자동으로 적용되지 않음
-라우터를 사용하여 개발한 경우 최상위 라우터 컴포넌트 요소의 속성으로 아래와 같이 세팅해야만 나옴!
(이렇게 안 하면 흰 화면만 나옴)
-라우터를 세팅한 index.js 파일에서 
<BrowserRouter basename={process.env.PUBLIC_URL}> : process.env.PUBLIC_URL 정해진 이름이야~
위의 태그 써주기
->'basename'속성은 package.json파일의 "homepage" 속성 값을 읽어옴!
->그래서 라우팅 연결시 이 홈페이지 주소로 정확한 라우팅이 되도록 세팅해줌
⭐주의사항 : 개발 소스로 띄울 때에는 주석처리하고 아무것도 없는 <BrowserRouter>를 사용해야 함



--->>> 추가 수정하기
루트로 돌아올 떄 슬래시(/)만으로 돌아오면 루트에 슬래시(/)없는 주소가 리턴되어 이미지 경로가 깨지는 문제 발생함! 확인 바람!

-로고를 클릭하여 첫페이지를 띄울 때 슬래시 없는 루트 페이지를 로딩함으로 인해서 이미지 경로가 깨짐!
-따라서 첫페이지는 첫페이지용 라우트를 따로 만들고 이것을 연결해줘야함
index.js의 <Route index element={<Main />} /> 아래쪽에
ex)  <Route path='main' element={<Main />} /> 추가해주기

(2)Layout.js에 to 속성값으로 main 라우트를 연결하기
<li>
    <Link to='/main'><Logo gb="top" /></Link>
</li>



[ 서브 라우트 페이지에서 새로고침시(f5) 404페이지가 뜨는 문제 해결 ]
1.원인 : 깃허브 pages는 라우트 서비스를 지원하지 않음
따라서 새로고침시 URL에서 표시된 주소를 폴더로 인식하여 폴더 하위의 index 페이지를 로딩하려고 함
이것은 실제로 없으므로 404 페이지 에러가 발생하는 것임

2.해결책 : 404.html 페이지를 만들고 404에러가 날 때 이 페이지가 있으면 메시지를 뿌려주는 용도로 사용할 수 있음
우리는 여기에 JS를 사용하여 첫 페이지가 보이는 경로 주소로 보내줌
(스크립트)
<script>
    location.replace("/dc-app/")
</script>
👉첫 루트로 보내는 방법임


🙂질문! : 그 라우터 서브에서의 새로고침은 안 되나요?
👉라우터 이동 자체가 실제 페이지가 아니고 JS로 연결한 컴포넌트 소스를 넣는 것이기 때문에 실제 페이지 이동과 같은 변경은 불가함
->라우터 서비스 지원 서버인 경우엔 문제가 없음!
->여기서의 처리 방법은 404 에러페이지를 보여주지 않고! 첫페이지로 넘겨주는 것만 처리함!
(그래서 서브페이지들에서 새로고침해도 메인페이지로 이동하게 됨)

👉새로고침시 제자리에 있으려면 아래의 HashRouter를 써야 함!



******************************************************

 [ 새로고침 404 에러 다른 해결법 : HashRouter 사용하기! ]

 기존 <BrowserRouter> 를 쓰지말고
라우터 중 주소를 해시코드로 넣는 
<HashRouter> 라는 것이 있는데
index.js의 상단에 
BrowserRouter 대신에 HashRouter를 import해주고

(실제코드)
import { HashRouter, Routes, Route} 
from "react-router-dom";

코드에 
<BrowserRouter> 대신
<HashRouter>를 사용하면
라우터 경로를 잡을때 ..../gm 이런식이 아니고
.../#/gm 이런식으로 잡기때문에
페이지를 이동하지 않기때문에
최상단으로만 이동해서 404에러가 나지 않는 
더 좋은 방법입니다!

(그리고 기존 BrowserRouter에서 라우팅 경로속성인
basename도 HashRouter에서는 사용할 필요가 없음!!!)

************************************************
[ 참고: HashRouter가 사용하는 /#/경로는 무엇인가? ]

->> 원래 URL에 슬래쉬 뒤에 #을 쓰면 최상단으로 이동함
이는 a태그의 href="#" 사용과 동일함!
__________________________________

((일반적이 /# 경로의 반응예))

https://www.w3schools.com
-> 스크롤 내리다가 새로고침시 스크롤 제자리에 있음

https://www.w3schools.com/#/
-> 스크롤 내려가다가 새로고침시
뒤에 /#이 있으면 최상단으로 이동함(기본특성임!)

https://www.w3schools.com/#/myhome
HashRouter에서 뒤에 다른 경로명을 쓰는데 실제로
웹에서 이렇게써도 /#/ 뒤에 사용하면 페이지이동하지 않음!
이런특성의 라우터 연결 컴포넌트가 HashRouter 컴포넌트임!


