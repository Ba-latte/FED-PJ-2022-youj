@charset "utf-8";
/* 큐브트립 메인 CSS - main.css */

/* 웹폰트 */
@import url('https://fonts.googleapis.com/css?family=Black+And+White+Picture|East+Sea+Dokdo|Jua&display=swap');
/*
    font-family: 'Black And White Picture', sans-serif;
    font-family: 'East Sea Dokdo', cursive;
    font-family: 'Jua', sans-serif;
*/

/***************** 변수 세팅 *****************/
:root{
    /* 큐브의 공통 크기 */
    --csz:25vw;
    /* --변수명 : 변수명은 내 마음대로 쓸 수 있음 */
}

/* 초기화 */
html, body, h1, h2, ul{
    margin: 0;
    padding: 0;
}

/* 스크롤바 디자인 클래스 */
/* -webkit- 밴더사명(크롬, 사파리) 접두어 사용함! */
/* (참고: 접두어의 종류로는 -ms-(ie), -o-(오페라), -moz-(파이어폭스) 가 있음) */
/* 클래스명 scbar */
.scbar::-webkit-scrollbar{
    /* 전체 스크롤바 크기(폭임)변경 */
    width: 5px;
}

.scbar::-webkit-scrollbar-thumb{
    /* 스크롤바 변경 */
    background-color: #ddd;
    border-radius: 3px;
}

.scbar::-webkit-scrollbar-track{
    /* 스크롤바트랙 (스크롤바가 다니는 길) 변경 */
    background-color: #555;
    border-radius: 3px;
}

body{
    height: 100vh;
    background-image: linear-gradient(to bottom, #777 30%, #ccc 70%);
}


/*********************************************** 1.전체 제목 ***********************************************/
.tit{
    text-align: center;
    padding-top: 50px;

    font-family: 'Black And White Picture', sans-serif;
    color: #fff;
    font-size: 60px;
    font-weight: normal;

    background: url(../images/citybg.png) no-repeat center 20px/auto 85%;
}


/*********************************************** 2.메뉴 버튼 ***********************************************/
.city{
    position: fixed;
    top: 3vw;
    right: 3vw;
}

.city ul{
    width: min(15vw, 200px);
    /* : 부모에게 높이값줬는데, li는 블록이라 높이값이 오토임! 따라서 부모따라가서 가득 채우기 때문에 그냥 부모에만 줌 */
    list-style: none;

    perspective: 50vw;
    /* : 자식요소가 3d처럼 보이게 하려면 부모요소에 perspective를 써야 함! 그리고 축변경은 원본인 자식에게 줘야함 */
}
.city li{
    height: 10vh;
    /* 보이는 화면의 10% -> 메뉴 6개니까 li들을 합치면 총 60% 차지함 */
    background-image: linear-gradient(to right, transparent, blue);

    transform-origin: right;
    /* : 3d 입체처럼 보이게 축 변경하기 */

    /* 트랜지션 : 속시이지 */
    transition: .3s;

}

/* li에 마우스오버시 y축으로 회전하기 */
.city li:nth-child(1):hover{
    transform: rotateY(45deg);
    background-image: linear-gradient(to right, transparent, yellow);
}
/* li에 마우스오버시 y축으로 회전하기 */
.city li:nth-child(2):hover{
    transform: rotateY(25deg);
    background-image: linear-gradient(to right, transparent, lime);
}
/* li에 마우스오버시 y축으로 회전하기 */
.city li:nth-child(3):hover{
    transform: rotateY(-35deg);
    background-image: linear-gradient(to right, transparent, hotpink);
}
/* li에 마우스오버시 y축으로 회전하기 */
.city li:nth-child(4):hover{
    transform: rotateY(55deg);
    background-image: linear-gradient(to right, transparent, lightskyblue);
}
/* li에 마우스오버시 y축으로 회전하기 */
.city li:nth-child(5):hover{
    transform: rotateY(20deg);
    background-image: linear-gradient(to right, transparent, yellowgreen);
}
/* li에 마우스오버시 y축으로 회전하기 */
.city li:nth-child(6):hover{
    transform: rotateY(-25deg);
    background-image: linear-gradient(to right, transparent, orangered);
}

.city a{
    display: block;
    width: 100%;
    height: 100%;
    /* : 상위요소인 ul에 200px*/

    font: 5vh/10vh 'East Sea Dokdo';
    text-decoration: none;
    text-align: center;
    /* : 글씨 가운데 오게 하기 */
    color: #fff;
}


/*********************************************** 3.큐브 박스 ***********************************************/

/* 큐브 */
.cube{
    position: absolute;
    /* 정중앙으로 위치 이동 - calc(50% - 크기의 절반값) */
    top: calc(50% - var(--csz)/2);
    left: calc(50% - var(--csz)/2);
    /* calc() 연산시 주의사항 : +,-는 기호 앞뒤를 띄어써야하고 *,/는 붙여써도 됨 */
    width: var(--csz);
    height: var(--csz);

    /*************************************************************
        [ 입체로 설정하기 ]
    -입체로 설정할 요소의 '부모 박스'에 아래와 같이 설정해 주면 된다
    (여기서 부모 박스는 감싸고 있는 요소를 말함)
    -사용법 : transform-style: preserve-3d;
    -기본값은 2D 설정인 'flat'임
    -preserve-3d는 3D 설정임
    *************************************************************/
    transform-style: preserve-3d;

    /* 입체인 걸 잘 보이게 하기 위해서 약간 회전 주기 */
    /* transform: rotateX(10deg) rotateY(30deg); */


    /* outline: 2px solid red; */

}

/* 큐브 각 면 공통 */
.cube span{
    position: absolute;
    /* 따로 디스플레이:블록 줄 필요 없이! 앱솔루트는 자동으로 블록이 된다 */
    width: 100%;
    height: 100%;
    /* 앱솔루트에서 %를 주면 부모를 찾는다! 여기서 부모는? .cube임 */
    
    /* 투명도 */
    opacity: 0.8;

    outline: 1px solid #555;
}

/* 1.앞면 : 시티메인 */
.cube span:nth-child(1){
    
    background: url(../images/cityMain.jpg) no-repeat center/cover;
    /* 화면방향(z축) */
    transform: translateZ(calc(var(--csz)/2));
    /* 큐브 사이즈의 절반을 z축의 앞쪽으로 이동시킴 */
}

/* 2.오른쪽면 : 런던 */
.cube span:nth-child(2){
    background: url(../images/London_city.jpg) no-repeat center/cover;

    /* 화면방향(z축) */
    transform:
    rotateY(90deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 y축으로 회전한 후, 큐브 사이즈의 절반을 앞쪽으로 이동함 */
    /* 주의사항 - 돌리고 민거랑 / 밀고 돌린거랑 결과물이 달라짐 */

}

/* 3.뒷면 : 파리 */
.cube span:nth-child(3){
    background: url(../images/parisCity.jpg) no-repeat center/cover;

    /* 화면방향(z축) */
    transform:
    rotateY(180deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 y축으로 회전한 후, 큐브 사이즈의 절반을 앞쪽으로 이동함 */
    /* 주의사항 - 돌리고 민거랑 / 밀고 돌린거랑 결과물이 달라짐 */

}

/* 4.왼쪽면 : 베를린 */
.cube span:nth-child(4){
    background: url(../images/berlin_city.jpg) no-repeat center/cover;

    /* 화면방향(z축) */
    transform:
    rotateY(-90deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 y축으로 회전한 후, 큐브 사이즈의 절반을 앞쪽으로 이동함 */
    /* 주의사항 - 돌리고 민거랑 / 밀고 돌린거랑 결과물이 달라짐 */

}

/* 5.윗면 : 서울 */
.cube span:nth-child(5){
    background: url(../images/seoulCity.jpg) no-repeat center/cover;

    /* 화면방향(z축) */
    transform:
    rotateX(90deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 x축으로 회전한 후, 큐브 사이즈의 절반을 앞쪽으로 이동함 */
    /* 주의사항 - 돌리고 민거랑 / 밀고 돌린거랑 결과물이 달라짐 */

}

/* 6.아랫면 : 뉴욕 */
.cube span:nth-child(6){
    background: url(../images/newyorkCity.jpg) no-repeat right/auto 105%;

    /* 화면방향(z축) */
    transform:
    rotateX(-90deg)
    translateZ(calc(var(--csz)/2));
    /* 먼저 x축으로 회전한 후, 큐브 사이즈의 절반을 앞쪽으로 이동함 */
    /* 주의사항 - 돌리고 민거랑 / 밀고 돌린거랑 결과물이 달라짐 */
}


/* 4.도시정보박스 */
.cbx{
    position: absolute;
    /* 정중앙으로 위치 이동 - calc(50% - 크기의 절반값) */
    top: calc(50% - var(--csz)/2);
    left: calc(50% - var(--csz)/2);
    /* calc() 연산시 주의사항 : +,-는 기호 앞뒤를 띄어써야하고 *,/는 붙여써도 됨 */
    width: var(--csz);
    height: var(--csz);

    /* 글자설정 */
    font-family: 'Jua', sans-serif;
    color: #fff;
    text-shadow: 0 0 2px #000;

    /* 처음에 투명하게 만들기 */
    opacity: 0;

    /* outline: 2px dashed red; */
}

/* 도시정보 속박스 */
.ctxt{
    position: absolute;
    width: 100%;
    height: 100%;
    /* 부모박스에 딱 달라붙에 만듦 */
    
    border: 3px solid #fff;

    box-sizing: border-box;
    /* : 크기유지박스 (보더가 바깥으로 나가지 않게 만들기) */
}

/* 도시명 */
h2.cname{
    text-align: center;
    line-height: min(7vw, 100px);

    font-size: min(40px, 2.5vw);
}

/* 도시 설명 */
p.cinfo{
    /* 타이틀을 제외한 영역 채우기 */
    margin: 0;
    height: calc(100% - min(7vw, 100px));
    box-sizing: border-box;
    /* position: absolute; */
    /* top: min(7vw, 100px); */

    padding: min(10px, 2vw);
    font-size: min(16px, 1vw);
    line-height: min(28px, 1.9vw);
    background-color: rgba(0, 0, 0, 0.295);

    /* 내용이 넘칠 때만 세로 스크롤바 자동 생성하도록 만들기 */
    overflow: auto;
}